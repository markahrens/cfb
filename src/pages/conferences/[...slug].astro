---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import SimpleTeamCard from '../../components/SimpleTeamCard.astro'
import ConferenceMap from '../../components/ConferenceMap.jsx';

import slugify from 'slugify';

export const prerender = true

export async function getStaticPaths() {
  const teams = await getCollection('teams', ({ data }) => {
    return data.classification !== null;
  });

  var conferences = []

  teams.map(team => {
    conferences.push(team.data.conference);
  });

  return [...new Set(conferences)].map(conf => {
    return {
              params: { slug: slugify(conf, {lower: true}) },
              props: {conf}
          }
  })
}

const conf = Astro.props;

var conferenceTeams = await getCollection('teams', ({ data }) => {
  return data.conference == conf.conf;
});


---

<BaseLayout pageTitle={`${conf.conf} |`}>
  <div class="page-content">
    <h1>{conf.conf}</h1>
    <div class="conference-page">
      <div class="teams">
        {conferenceTeams.sort().map(team => (
          <SimpleTeamCard id={team.data.id} />
        ))}
        </div>
        <div class="map">
          <ConferenceMap client:only="react" teams={conferenceTeams}/>
        </div>
    </div>

  </div>
</BaseLayout>

<style is:global>
  .conference-page {
    display: grid;
    grid-template-columns: 1fr 2fr;
    column-gap: 40px;
  }
   .map-container {
    height: 600px;
    width: 100%;
  }
  .name-tooltip {
    background-color: rgba(255,255,255,1);
    height: 16px;
    border: none !important;
    border-radius: 16px;
    font-family: "Radio Canada Big", sans-serif;
    font-weight: 500;
    box-shadow: none;
    opacity: 1 !important;
  }

  .leaflet-tooltip-top:before,
  .leaflet-tooltip-bottom:before,
  .leaflet-tooltip-left:before,
  .leaflet-tooltip-right:before {
    border: none !important
  }
</style>